#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ü–†–û–°–¢–û–ô –û–¢–ü–†–ê–í–ò–¢–ï–õ–¨ TELEGRAM –î–õ–Ø WINDOWS 10
=========================================

–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä–∞—è
–≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Windows 10 –±–µ–∑ –ø—Ä–æ–±–ª–µ–º –∏ –æ—à–∏–±–æ–∫.

–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
1. –°–∫–∞—á–∞–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –Ω–∞ —Å–≤–æ–π –∫–æ–º–ø—å—é—Ç–µ—Ä
2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.8 –∏–ª–∏ –Ω–æ–≤–µ–µ —Å —Å–∞–π—Ç–∞ python.org
3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É: pip install telethon
4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python easy_telegram_sender.py

–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
- –ú–∏–Ω–∏–º—É–º –∫–æ–¥–∞ = –º–∏–Ω–∏–º—É–º –æ—à–∏–±–æ–∫
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç
- –†–∞–±–æ—Ç–∞–µ—Ç –∏–∑ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
- –£–¥–æ–±–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
"""

import os
import sys
import time
import random
import datetime

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Telethon
try:
    from telethon.sync import TelegramClient
    from telethon.errors import FloodWaitError
except ImportError:
    print("\n‚ùå –û—à–∏–±–∫–∞: –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ Telethon –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–µ –∫–æ–º–∞–Ω–¥–æ–π:")
    print("pip install telethon")
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
    sys.exit(1)

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è API Telegram
API_ID = 1079592
API_HASH = "4b3c8eeb47a62ecc941e61907f1a7bf0"

# –ò–º—è —Ñ–∞–π–ª–∞ —Å–µ—Å—Å–∏–∏
SESSION_NAME = "telegram_win10"

# –ò–º—è —Ñ–∞–π–ª–∞ —Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º–∏
RECIPIENTS_FILE = "recipients.txt"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ —Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º–∏
def create_recipients_file():
    """–°–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª —Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º–∏ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç"""
    if not os.path.exists(RECIPIENTS_FILE):
        try:
            with open(RECIPIENTS_FILE, 'w', encoding='utf-8') as f:
                f.write("# –°–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π —Å–æ–æ–±—â–µ–Ω–∏–π (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É)\n")
                f.write("# –ú–æ–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å @username –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å '+'\n")
                f.write("# –ü—Ä–∏–º–µ—Ä:\n")
                f.write("# @username\n")
                f.write("# +79001234567\n")
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª —Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º–∏: {RECIPIENTS_FILE}")
            print(f"   –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –≤ —ç—Ç–æ—Ç —Ñ–∞–π–ª")
        except Exception as e:
            print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")

# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
def load_recipients():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞"""
    if not os.path.exists(RECIPIENTS_FILE):
        create_recipients_file()
        return []
    
    try:
        with open(RECIPIENTS_FILE, 'r', encoding='utf-8') as f:
            # –§–∏–ª—å—Ç—Ä—É–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
            return [line.strip() for line in f if line.strip() and not line.strip().startswith('#')]
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {RECIPIENTS_FILE}: {e}")
        return []

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç
def login_to_telegram():
    """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ Telegram –∏ –≤—Ö–æ–¥–∏—Ç –≤ –∞–∫–∫–∞—É–Ω—Ç –µ—Å–ª–∏ –Ω—É–∂–Ω–æ"""
    print("\nüîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...")
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    client = TelegramClient(SESSION_NAME, API_ID, API_HASH)
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è
        client.connect()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        if client.is_user_authorized():
            me = client.get_me()
            print(f"‚úÖ –í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫: {me.first_name} {me.last_name or ''} (@{me.username or '–Ω–µ—Ç'})")
        else:
            print("\n‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –≤—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç Telegram")
            
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            phone = input("üì± –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Å +): ")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∫–æ–¥
            client.send_code_request(phone)
            print("‚úÖ Telegram –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")
            
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            code = input("üîë –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ Telegram: ")
            
            try:
                # –ü—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ —Å –∫–æ–¥–æ–º
                client.sign_in(phone, code)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å–ø–µ—à–Ω–æ –ª–∏ –≤–æ—à–ª–∏
                if client.is_user_authorized():
                    me = client.get_me()
                    print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç: {me.first_name} {me.last_name or ''} (@{me.username or '–Ω–µ—Ç'})")
                else:
                    # –í–æ–∑–º–æ–∂–Ω–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä–æ–ª—å 2FA
                    password = input("üîí –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: ")
                    client.sign_in(password=password)
                    me = client.get_me()
                    print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç: {me.first_name} {me.last_name or ''} (@{me.username or '–Ω–µ—Ç'})")
            except Exception as e:
                print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ: {e}")
                client.disconnect()
                return None
        
        return client
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Telegram: {e}")
        if client:
            client.disconnect()
        return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
def send_messages(client, message, recipients):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º"""
    if not recipients:
        print("\n‚ùå –°–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç")
        return 0, 0
    
    # –°—á–µ—Ç—á–∏–∫–∏
    successful = 0
    failed = 0
    
    # –°–æ–∑–¥–∞–µ–º –ª–æ–≥-—Ñ–∞–π–ª
    timestamp = datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    log_filename = f"–æ—Ç—á–µ—Ç_{timestamp}.txt"
    
    with open(log_filename, 'w', encoding='utf-8') as log:
        log.write("===== –û–¢–ß–ï–¢ –û–ë –û–¢–ü–†–ê–í–ö–ï –°–û–û–ë–©–ï–ù–ò–ô =====\n\n")
        log.write(f"–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
        log.write(f"–í—Å–µ–≥–æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π: {len(recipients)}\n")
        log.write(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message}\n\n")
        
        print(f"\nüöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π ({len(recipients)} –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π)...")
        
        for i, recipient in enumerate(recipients, 1):
            try:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                client.send_message(recipient, message)
                
                # –û—Ç–º–µ—á–∞–µ–º —É—Å–ø–µ—Ö
                successful += 1
                status = f"‚úÖ [{i}/{len(recipients)}] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {recipient}"
                print(status)
                log.write(f"{status}\n")
                
                # –î–µ–ª–∞–µ–º –ø–∞—É–∑—É –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
                if i < len(recipients):
                    delay = 2 + random.uniform(0.5, 1.5)
                    time.sleep(delay)
                    
            except FloodWaitError as e:
                # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–æ—Ç—É –æ—Ç–ø—Ä–∞–≤–∫–∏
                wait_seconds = e.seconds
                
                # –ï—Å–ª–∏ –∂–¥–∞—Ç—å –Ω–µ –æ—á–µ–Ω—å –¥–æ–ª–≥–æ, –∂–¥–µ–º
                if wait_seconds <= 60:
                    status = f"‚è≥ –ñ–¥–µ–º {wait_seconds} —Å–µ–∫. –∏–∑-–∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è Telegram..."
                    print(status)
                    log.write(f"{status}\n")
                    
                    # –ñ–¥–µ–º —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
                    time.sleep(wait_seconds)
                    
                    # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞
                    try:
                        client.send_message(recipient, message)
                        successful += 1
                        status = f"‚úÖ [{i}/{len(recipients)}] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (–ø–æ—Å–ª–µ –ø–∞—É–∑—ã): {recipient}"
                        print(status)
                        log.write(f"{status}\n")
                        continue
                    except Exception as e2:
                        pass
                
                # –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–∂–µ –ø–æ—Å–ª–µ –æ–∂–∏–¥–∞–Ω–∏—è
                failed += 1
                status = f"‚ùå [{i}/{len(recipients)}] –û—à–∏–±–∫–∞ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ {wait_seconds}—Å): {recipient}"
                print(status)
                log.write(f"{status}\n")
                
            except Exception as e:
                # –ü—Ä–æ—á–∏–µ –æ—à–∏–±–∫–∏
                failed += 1
                status = f"‚ùå [{i}/{len(recipients)}] –û—à–∏–±–∫–∞: {recipient} - {str(e)}"
                print(status)
                log.write(f"{status}\n")
                
                # –ü–∞—É–∑–∞ –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏
                time.sleep(2)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Ç–æ–≥–∏
        log.write("\n===== –ò–¢–û–ì–ò =====\n")
        log.write(f"–í—Å–µ–≥–æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π: {len(recipients)}\n")
        log.write(f"–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {successful}\n")
        log.write(f"–û—à–∏–±–æ–∫: {failed}\n")
        
        if recipients:
            success_rate = (successful / len(recipients)) * 100
            log.write(f"–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {success_rate:.1f}%\n")
    
    print(f"\n‚úÖ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {log_filename}")
    return successful, failed

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    print("=" * 60)
    print("–ü–†–û–°–¢–û–ô –û–¢–ü–†–ê–í–ò–¢–ï–õ–¨ TELEGRAM –î–õ–Ø WINDOWS 10")
    print("=" * 60)
    print("–í–µ—Ä—Å–∏—è 1.0 | –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Windows 10 –±–µ–∑ –æ—à–∏–±–æ–∫")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    create_recipients_file()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
    recipients = load_recipients()
    if not recipients:
        print("\n‚ö†Ô∏è –§–∞–π–ª —Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º–∏ –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π")
        print(f"   –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –≤ —Ñ–∞–π–ª {RECIPIENTS_FILE}")
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return
    
    print(f"\n‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(recipients)} –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π")
    
    # –í—Ö–æ–¥–∏–º –≤ Telegram
    client = login_to_telegram()
    if not client:
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    print("\nüìù –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:")
    print("   (–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ Enter, –∑–∞—Ç–µ–º Ctrl+Z –∏ Enter –≤ Windows)")
    
    message_lines = []
    try:
        while True:
            line = input()
            message_lines.append(line)
    except (EOFError, KeyboardInterrupt):
        pass
    
    message = '\n'.join(message_lines)
    
    if not message.strip():
        print("\n‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        client.disconnect()
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    print("\n" + "=" * 40)
    print(f"üìä –ü–æ–ª—É—á–∞—Ç–µ–ª–µ–π: {len(recipients)}")
    print(f"üí¨ –¢–µ–∫—Å—Ç: {message[:50]}{'...' if len(message) > 50 else ''}")
    print("=" * 40)
    
    confirm = input("\nüîÑ –ù–∞—á–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π? (–¥–∞/–Ω–µ—Ç): ").lower()
    if confirm not in ["–¥–∞", "yes", "y", "–¥"]:
        print("\n‚ùå –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        client.disconnect()
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
    try:
        successful, failed = send_messages(client, message, recipients)
        
        # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏
        print("\n" + "=" * 40)
        print("–ò–¢–û–ì–ò:")
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {successful}")
        print(f"‚ùå –û—à–∏–±–æ–∫: {failed}")
        
        if recipients:
            success_rate = (successful / len(recipients)) * 100
            print(f"üìä –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {success_rate:.1f}%")
        
        print("=" * 40)
        
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        # –û—Ç–∫–ª—é—á–∞–µ–º—Å—è
        client.disconnect()
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n‚ùå –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")