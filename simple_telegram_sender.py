#!/usr/bin/env python3
"""
Simple Telegram Sender - —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python simple_telegram_sender.py @username "–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è"
    python simple_telegram_sender.py --list usernames.txt "–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è"
"""

import os
import sys
import asyncio
import logging
from telethon import TelegramClient

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(message)s')
logger = logging.getLogger(__name__)

# Telegram API credentials
API_ID = os.environ.get('TELEGRAM_API_ID')
API_HASH = os.environ.get('TELEGRAM_API_HASH')

# –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è
SESSION_FILE = "session_380664312381"

async def send_message(recipient, message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø–æ–ª—É—á–∞—Ç–µ–ª—é"""
    if not API_ID or not API_HASH:
        print("‚ùå –û—à–∏–±–∫–∞: API_ID –∏–ª–∏ API_HASH –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Telegram —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–µ—Å—Å–∏–µ–π
    client = TelegramClient(SESSION_FILE, int(API_ID), API_HASH)
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ API
        await client.connect()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –ª–∏ –º—ã
        if not await client.is_user_authorized():
            print(f"‚ùå –û—à–∏–±–∫–∞: –°–µ—Å—Å–∏—è {SESSION_FILE} –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∞")
            return False
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        print(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è {recipient}...")
        
        try:
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
            entity = await client.get_entity(recipient)
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await client.send_message(entity, message)
            print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è {recipient} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ {recipient}: {str(e)}")
            return False
    
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        return False
    
    finally:
        # –û—Ç–∫–ª—é—á–∞–µ–º—Å—è
        await client.disconnect()

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) < 3:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python simple_telegram_sender.py @username '–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è'")
        print("  python simple_telegram_sender.py --list usernames.txt '–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è'")
        return
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã (–æ–¥–∏–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—å –∏–ª–∏ —Å–ø–∏—Å–æ–∫)
    if sys.argv[1] == "--list":
        if len(sys.argv) < 4:
            print("–î–ª—è —Ä–µ–∂–∏–º–∞ —Å–ø–∏—Å–∫–∞ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ñ–∞–π–ª –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
            return
        
        # –ß–∏—Ç–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞
        try:
            with open(sys.argv[2], 'r') as f:
                recipients = [line.strip() for line in f if line.strip()]
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {str(e)}")
            return
        
        message = sys.argv[3]
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º –∏–∑ —Å–ø–∏—Å–∫–∞
        print(f"üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π {len(recipients)} –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º...")
        success_count = 0
        
        for recipient in recipients:
            if await send_message(recipient, message):
                success_count += 1
            
            # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π Telegram
            await asyncio.sleep(1.5)
        
        print(f"\nüìä –ò—Ç–æ–≥–∏: {success_count} –∏–∑ {len(recipients)} —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
    
    else:
        # –†–µ–∂–∏–º –æ–¥–Ω–æ–≥–æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        recipient = sys.argv[1]
        message = sys.argv[2]
        
        await send_message(recipient, message)

if __name__ == "__main__":
    asyncio.run(main())